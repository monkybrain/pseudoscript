// Generated by CoffeeScript 1.10.0
(function() {
  var Abject, Light, objects,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Abject = (function() {
    function Abject() {
      this.members = [];
    }

    return Abject;

  })();

  Light = (function(superClass) {
    extend(Light, superClass);

    Light.word = 'light';

    Light.properties = {
      'on': false,
      'brightness': 45,
      'timer': 30
    };

    function Light() {
      null;
    }

    Light.prototype.set = function(property, value) {
      if (property === 'brightness') {
        console.log("Brightness set to " + value);
      }
      if (property === 'timer') {
        return console.log("Timer set to " + value);
      }
    };

    return Light;

  })(Abject);

  objects = {
    Light: Light
  };

  module.exports = objects;

}).call(this);
