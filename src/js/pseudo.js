#! /usr/bin/env node

// Generated by CoffeeScript 1.10.0
(function() {
  var Parser, Photon, Programmer, argv, code, dictionary, err, error, error1, file, filename, fs, i, j, len, len1, line, lines, log, map, parser, programmer, script, segment, segments, shell;

  argv = require("yargs").argv;

  shell = require("shelljs");

  fs = require("fs");

  log = require("monky-tools").console.log;

  error = require("monky-tools").console.error;

  dictionary = require("./dictionary");

  map = require("./map");

  Parser = require("./parser");

  Programmer = require("./programmer");

  Photon = require("./photon");

  parser = new Parser(dictionary, map);

  programmer = new Programmer(map);

  if (argv._[0] != null) {
    filename = argv._[0];
  } else {
    error("Error: no input!");
    return;
  }

  try {
    file = fs.readFileSync(filename, "utf8");
  } catch (error1) {
    err = error1;
    error("Error: could not open " + filename);
    return;
  }

  lines = file.split(/(\n)|(\.)/g);

  lines = lines.filter(function(line) {
    if (line === '') {
      return false;
    } else if (line === '.') {
      return false;
    } else if (line === '\n') {
      return false;
    } else if (line == null) {
      return false;
    } else {
      return true;
    }
  });

  lines = lines.map(function(line) {
    var index;
    index = line.indexOf("#");
    if (index !== -1) {
      line = line.slice(0, index);
    }
    return line;
  });

  lines = lines.filter(function(line) {
    return line !== '';
  });

  lines = lines.map(function(line) {
    return line.trim();
  });

  segments = [];

  for (i = 0, len = lines.length; i < len; i++) {
    line = lines[i];
    segments.push(parser.parse(line));
  }

  code = '';

  for (j = 0, len1 = segments.length; j < len1; j++) {
    segment = segments[j];
    code += programmer.process(segment);
  }

  script = programmer.wrap(code);

  log(script);

  script.to("temp.coffee");

  shell.exec("coffee temp.coffee");

}).call(this);
