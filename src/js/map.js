// Generated by CoffeeScript 1.10.0
(function() {
  var Abject, Light, Room, bedrrom, kitchen, objects,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Abject = (function() {
    Abject.members = [];

    function Abject(ref) {
      if (ref != null) {
        this.ref = ref;
      }
      this.children = [];
    }

    Abject.prototype.add = function(object) {
      return this.children.push(object.ref);
    };

    Abject.prototype.set = function(p, value) {
      var key, property;
      property = null;
      for (key in this.properties) {
        if (p === key) {
          property = p;
          break;
        }
      }
      if (!property) {
        return console.error("Invalid property");
      } else {
        if (typeof value === typeof this.properties[property]) {
          return this.properties[property] = value;
        } else {
          return console.error("Invalid value");
        }
      }
    };

    return Abject;

  })();

  Light = (function(superClass) {
    extend(Light, superClass);

    Light.word = 'light';

    Light.properties = {
      'on': false,
      'brightness': 5,
      'timer': 10
    };

    function Light(ref) {
      Light.__super__.constructor.call(this, ref);
      this.properties = Light.properties;
      Light.members.push(this);
    }

    return Light;

  })(Abject);

  Room = (function(superClass) {
    extend(Room, superClass);

    Room.word = 'room';

    function Room(ref) {
      Room.__super__.constructor.call(this, ref);
      this.properties = Light.properties;
      Room.members.push(this);
    }

    return Room;

  })(Abject);

  objects = {
    Light: Light,
    Room: Room
  };

  bedrrom = new Room('bedroom');

  kitchen = new Room('kitchen');

  kitchen.add(new Light('ceiling'));

  console.log(Room);

  module.exports = objects;

}).call(this);
