// Generated by CoffeeScript 1.10.0
(function() {
  var Module, Room,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Module = require("./module");

  Room = (function(superClass) {
    extend(Room, superClass);

    function Room() {
      return Room.__super__.constructor.apply(this, arguments);
    }

    Room.self = 'Room';

    Room.properties = {
      'dark': {
        type: 'boolean',
        set: false
      },
      'temperature': {
        type: 'number',
        set: false
      },
      'threshold': {
        type: 'number',
        set: true
      }
    };

    Room.lexical = {
      base: 'room'
    };

    return Room;

  })(Module);

  module.exports = Room;

}).call(this);
