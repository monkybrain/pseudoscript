// Generated by CoffeeScript 1.10.0
(function() {
  var Math, Verb,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Verb = require("../verb");

  Math = (function(superClass) {
    extend(Math, superClass);

    function Math() {
      return Math.__super__.constructor.apply(this, arguments);
    }

    Math.isExpression = function(operand) {
      var match, pattern;
      pattern = /\d+?\s*((\*|\+|\-|\\)\s*\d+?)*/;
      match = operand.match(pattern);
      return match != null;
    };

    Math.getOperand = function(text) {
      var match, operand, pattern;
      pattern = /(\bby\b)\s+?(.*)/;
      match = text.match(pattern);
      if (match != null) {
        operand = match[2];
        return operand;
      }
    };

    return Math;

  })(Verb);

  module.exports = Math;

}).call(this);
