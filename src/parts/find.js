// Generated by CoffeeScript 1.10.0
(function() {
  var Find, modules;

  modules = require("../modules/modules");

  Find = (function() {
    function Find() {}

    Find.object = function(text) {
      var i, len, match, module;
      for (i = 0, len = modules.length; i < len; i++) {
        module = modules[i];
        match = text.match(module.lexical.base);
        if (match != null) {
          return module.self;
        }
      }
    };

    Find.objects = function(text) {
      var i, len, match, matches, module;
      matches = [];
      for (i = 0, len = modules.length; i < len; i++) {
        module = modules[i];
        match = text.match(module.lexical.base);
        if (match != null) {
          matches.push(module.self);
        }
      }
      return matches;
    };

    Find.module = function(object) {
      var i, len, match, module;
      for (i = 0, len = modules.length; i < len; i++) {
        module = modules[i];
        match = object.match(module.self);
        if (match != null) {
          return module;
        }
      }
    };

    Find.word = function(object) {
      var i, len, match, module;
      for (i = 0, len = modules.length; i < len; i++) {
        module = modules[i];
        match = object.match(module.self);
        if (match != null) {
          return module.lexical.base;
        }
      }
    };

    Find.reference = function(text) {
      var end, indices, match, pattern, start;
      indices = [];
      pattern = /"|'/g;
      while (true) {
        match = pattern.exec(text);
        if (match != null) {
          indices.push(match.index);
        } else {
          break;
        }
      }
      if (indices.length > 0) {
        start = indices[0] + 1;
        end = indices[1];
        return text.slice(start, end);
      }
    };

    Find.references = function(text) {
      var matches;
      matches = text.match(/'[^']*'/g);
      return matches.map(function(match) {
        return match.replace(/'/g, '');
      });
    };

    Find.number = function(text) {
      var match, pattern;
      pattern = /\b\d+\b/g;
      match = text.match(pattern);
      if (match != null) {
        return match[0];
      }
    };

    return Find;

  })();

  module.exports = Find;

}).call(this);
